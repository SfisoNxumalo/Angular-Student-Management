{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nexport let SearchStudentComponent = class SearchStudentComponent {\n  constructor(studentServ) {\n    this.studentServ = studentServ;\n    this.searchTerms = new Subject();\n  }\n  search(term) {\n    this.searchTerms.next(term);\n  }\n  ngOnInit() {\n    this.heroes$ = this.searchTerms.pipe(\n    // wait 300ms after each keystroke before considering the term\n    debounceTime(300),\n    // ignore new term if same as previous term\n    distinctUntilChanged(),\n    // switch to new search observable each time the term changes\n    switchMap(term => this.studentServ.searchHeroes(term)));\n  }\n};\nSearchStudentComponent = __decorate([Component({\n  selector: 'app-search-student',\n  templateUrl: './search-student.component.html',\n  styleUrls: ['./search-student.component.css']\n})], SearchStudentComponent);","map":{"version":3,"names":["Component","Subject","debounceTime","distinctUntilChanged","switchMap","SearchStudentComponent","constructor","studentServ","searchTerms","search","term","next","ngOnInit","heroes$","pipe","searchHeroes","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\PC_User\\Desktop\\Sfiso Mawila UCT SGB\\Angular-Student-Management\\Student-Management-System\\src\\app\\search-student\\search-student.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { StudentService } from '../student.service';\r\nimport {\r\n  debounceTime, distinctUntilChanged, switchMap\r\n} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-search-student',\r\n  templateUrl: './search-student.component.html',\r\n  styleUrls: ['./search-student.component.css']\r\n})\r\n\r\nexport class SearchStudentComponent implements OnInit{\r\n  heroes$!: Observable<[]>;\r\n  private searchTerms = new Subject<string>();\r\n\r\n  constructor(private studentServ: StudentService){}\r\n\r\n  search(term: string): void {\r\n    this.searchTerms.next(term);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.heroes$ = this.searchTerms.pipe(\r\n      // wait 300ms after each keystroke before considering the term\r\n      debounceTime(300),\r\n\r\n      // ignore new term if same as previous term\r\n      distinctUntilChanged(),\r\n\r\n      // switch to new search observable each time the term changes\r\n      switchMap((term: string) => this.studentServ.searchHeroes(term)),\r\n    );\r\n  }\r\n\r\n}\r\n\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAqBC,OAAO,QAAQ,MAAM;AAG1C,SACEC,YAAY,EAAEC,oBAAoB,EAAEC,SAAS,QACxC,gBAAgB;AAQhB,WAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAIjCC,YAAoBC,WAA2B;IAA3B,KAAAA,WAAW,GAAXA,WAAW;IAFvB,KAAAC,WAAW,GAAG,IAAIP,OAAO,EAAU;EAEM;EAEjDQ,MAAMA,CAACC,IAAY;IACjB,IAAI,CAACF,WAAW,CAACG,IAAI,CAACD,IAAI,CAAC;EAC7B;EAEAE,QAAQA,CAAA;IACN,IAAI,CAACC,OAAO,GAAG,IAAI,CAACL,WAAW,CAACM,IAAI;IAClC;IACAZ,YAAY,CAAC,GAAG,CAAC;IAEjB;IACAC,oBAAoB,EAAE;IAEtB;IACAC,SAAS,CAAEM,IAAY,IAAK,IAAI,CAACH,WAAW,CAACQ,YAAY,CAACL,IAAI,CAAC,CAAC,CACjE;EACH;CAED;AAvBYL,sBAAsB,GAAAW,UAAA,EANlChB,SAAS,CAAC;EACTiB,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,C,EAEWd,sBAAsB,CAuBlC"},"metadata":{},"sourceType":"module","externalDependencies":[]}